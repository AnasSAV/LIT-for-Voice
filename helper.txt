LIT for Voice - API Endpoint Usage Map

This file maps backend endpoints to their consumers across the frontend and tests. Paths are relative to the repository root.

Backend route source files:
- Backend/app/api/routes/health.py
- Backend/app/api/routes/session.py
- Backend/app/api/routes/results.py
- Backend/app/api/routes/inferences.py
- Backend/app/api/routes/upload.py
- Backend/app/api/routes/datasets.py

1) Health
- GET /health
  - Used by: None in frontend/tests currently (manual/ops check)
  - Source: Backend/app/api/routes/health.py

2) Session + Queue
- GET /session
  - Used by: Backend/tests/test_session_cookie.py, Backend/tests/test_queue.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/session.py

- GET /queue
  - Used by: Backend/tests/test_queue.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/session.py

- POST /queue/add
  - Used by: Backend/tests/test_queue.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/session.py

- PATCH /queue/progress
  - Used by: Backend/tests/test_queue.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/session.py

- DELETE /queue
  - Used by: Backend/tests/test_queue.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/session.py

3) Results cache
- GET /results/{model}/{h}
  - Used by: Backend/tests/test_results_cache.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/results.py

- POST /results/{model}/{h}
  - Used by: Backend/tests/test_results_cache.py
  - Frontend usage: None
  - Source: Backend/app/api/routes/results.py

4) Inference
- POST /inferences/run (JSON body: {model, file_path?, dataset?, dataset_file?})
  - Used by (frontend):
    - Frontend/src/components/layout/Toolbar.tsx (function onModelChange)
      - Sends POST request with JSON body containing model and optional file parameters
  - Used by (backend internal call):
    - Backend/app/api/routes/upload.py calls run_inference(model, file_path) directly (not HTTP) after saving upload
  - Source: Backend/app/api/routes/inferences.py

5) Uploads
- GET /upload/test
  - Used by (frontend):
    - Frontend/src/components/layout/Toolbar.tsx ("Test Backend" button)
  - Source: Backend/app/api/routes/upload.py

- POST /upload (multipart form-data: file, model)
  - Used by (frontend):
    - Frontend/src/components/audio/AudioUploader.tsx (drag/drop uploader)
    - Frontend/src/components/panels/AudioDatasetPanel.tsx (uploadFile helper; includes model)
  - Side effects:
    - Backend saves file to uploads/ and invokes run_inference(model, file_path) internally; returns metadata + prediction
  - Source: Backend/app/api/routes/upload.py

- DELETE /upload/{file_id}
  - Used by: No current frontend/test usage
  - Source: Backend/app/api/routes/upload.py

- GET /upload/file/{file_id}
  - Used by (frontend):
    - Frontend/src/components/panels/DatapointEditorPanel.tsx (constructs audio URL for uploaded files)
    - Frontend/src/components/audio/WaveformViewer.tsx loads audioUrl via HEAD/GET
  - Source: Backend/app/api/routes/upload.py

- HEAD /upload/file/{file_id}
  - Used by (frontend):
    - Frontend/src/components/audio/WaveformViewer.tsx issues HEAD to test access, then GET as fallback
  - Source: Backend/app/api/routes/upload.py

- OPTIONS /upload/file/{file_id}
  - Used by: Implicit CORS/preflight; no direct calls in code
  - Source: Backend/app/api/routes/upload.py

- GET /upload/metadata/{file_id}
  - Used by: No current frontend/test usage
  - Source: Backend/app/api/routes/upload.py

- GET /upload/list
  - Used by: No current frontend/test usage
  - Source: Backend/app/api/routes/upload.py

6) Datasets
- GET /dataset/list?dataset={key}
  - Used by (frontend):
    - Frontend/src/components/panels/AudioDatasetPanel.tsx (loads dataset items in useEffect)
  - Source: Backend/app/api/routes/datasets.py

- GET /dataset/item?dataset={key}&id={id}
  - Used by (frontend):
    - Frontend/src/components/panels/AudioDatasetPanel.tsx (loads metadata for selected dataset item)
  - Source: Backend/app/api/routes/datasets.py

- GET /dataset/file?dataset={key}&id={id}
  - Used by (frontend):
    - Frontend/src/components/panels/AudioDatasetPanel.tsx (constructs audioUrl for selected item)
    - Frontend/src/components/audio/WaveformViewer.tsx loads the audioUrl via HEAD/GET
    - Frontend/src/components/panels/DatapointEditorPanel.tsx prefers selectedFile.audio_url when present (dataset)
  - Source: Backend/app/api/routes/datasets.py

Notes and gaps
- Frontend currently does not call /session, /queue, or /results endpoints; these are covered by backend tests only. They are ready for future job/queue integration.
- Upload endpoint triggers synchronous inference in the backend; frontend calls only POST /upload.
- Audio viewer components rely on GET/HEAD to the constructed audioUrl, which may be either /upload/file/{id} or /dataset/file?... depending on selection.
